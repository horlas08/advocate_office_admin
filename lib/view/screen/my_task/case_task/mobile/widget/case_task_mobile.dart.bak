import 'package:advocateoffice/controller/ui/task/case_task.dart';
import 'package:advocateoffice/view/common_widgets.dart/common_drop_down.dart';
import 'package:advocateoffice/view/common_widgets.dart/common_field.dart';
import 'package:advocateoffice/view/common_widgets.dart/custom_alertDialogue.dart';
import 'package:advocateoffice/view/common_widgets.dart/custom_text.dart';
import 'package:advocateoffice/view/common_widgets.dart/date_picker.dart';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:get/get.dart';

class CaseTaskCardMobile extends StatelessWidget {
  const CaseTaskCardMobile({super.key, required this.controller, this.data});
  final CaseTaskController controller;
  final data;
  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 5),
      child: Card(
        child: SizedBox(
          height: 200,
          width: MediaQuery.sizeOf(context).width,
          child: Column(
            children: [
              Card(
                margin: EdgeInsets.zero,
                shape: OutlineInputBorder(borderRadius: BorderRadius.circular(5), borderSide: BorderSide(color: Colors.transparent)),
                elevation: 1,
                child: Padding(
                  padding: const EdgeInsets.all(8.0),
                  child: Row(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Expanded(
                        flex: 3,
                        child: Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            CustomTextWidget(
                              fontColor: Theme.of(context).textTheme.headlineMedium!.color,
                              text: "Md. Mamun Islam  - 01761810531",
                              maxLine: 2,
                            ),
                            CustomTextWidget(
                              text: "Case ID : C256B3",
                              fontColor: Theme.of(context).textTheme.headlineMedium!.color,
                            ),
                          ],
                        ),
                      ),
                      Expanded(
                        flex: 1,
                        child: Column(
                          crossAxisAlignment: CrossAxisAlignment.end,
                          children: [
                            CustomTextWidget(
                              text: "3 Day's left",
                              fontColor: Theme.of(context).textTheme.headlineMedium!.color,
                            ),
                            CustomTextWidget(
                              text: "High",
                              fontColor: Theme.of(context).textTheme.headlineMedium!.color,
                            ),
                          ],
                        ),
                      ),
                    ],
                  ),
                ),
              ),
              Expanded(
                child: Padding(
                  padding: const EdgeInsets.all(8.0),
                  child: CustomTextWidget(
                      maxLine: 20,
                      textOverflow: TextOverflow.ellipsis,
                      text:
                          "It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like "),
                ),
              ),
              Card(
                margin: EdgeInsets.zero,
                shape: OutlineInputBorder(borderRadius: BorderRadius.circular(5), borderSide: BorderSide(color: Colors.transparent)),
                elevation: 1,
                child: Padding(
                  padding: const EdgeInsets.all(8.0),
                  child: Row(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Expanded(
                        flex: 4,
                        child: Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            CustomTextWidget(
                              text: "Assign Date",
                              //fontColor: Theme.of(context).textTheme.headlineMedium!.color,
                              maxLine: 2,
                            ),
                            CustomTextWidget(
                              text: "21 Dec 2024, 3:52 PM",
                            ),
                          ],
                        ),
                      ),
                      Expanded(
                        flex: 5,
                        child: Row(
                          mainAxisAlignment: MainAxisAlignment.end,
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            // IconButton(
                            //   onPressed: () {
                            //      showsDialog(
                            //       context: context,
                            //       title: "Edit Task",
                            //       data: data,
                                
                            //     );
                            //   },
                            //   icon: const Icon(
                            //     Icons.remove_red_eye,
                            //     size: 16,
                            //   ),
                            // ),
                            IconButton(
                              onPressed: () {
                                showsDialog(
                                  context: context,
                                  title: "Edit Task",
                                  data: data,
                                );
                              },
                              icon: const Icon(
                                Icons.edit,
                                size: 16,
                              ),
                            ),
                            IconButton(
                              onPressed: () {
                                showDialog(
                                  context: context,
                                  builder: (context) => CustomAlertDialogue(
                                    title: "Delete Confirmation",
                                    body: Text("Are you sure you want to delete this task?"),
                                    confirmButtonName: "Delete",
                                    confirmButtonFunction: () {
                                      Get.back();
                                    },
                                  ),
                                );
                              },
                              icon: const Icon(
                                Icons.delete,
                                size: 16,
                              ),
                            ),
                          ],
                        ),
                      ),
                    ],
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  void showsDialog({
    required BuildContext context,
    required String title,
    required data,
   
  }) {
    showDialog(
      context: context,
      builder: (BuildContext context) {
        return SingleChildScrollView(
          child: CustomAlertDialogue(
              title: title,
              body: Form(
                key: controller.fromKey,
                child: Column(
                  mainAxisSize: MainAxisSize.min,
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    CommonDropDown(
                      context: context,
                      label: "Select Case ID",
                      value: controller.selectCaseId,
                      items: controller.caseIdList,
                      onChanged: (value) {
                        if (value != null) {
                          controller.selectCaseId.value = value;
                        }
                      },
                    ),
                    const SizedBox(height: 16),
                    CommonField(
                      controller: controller.clientNameController,
                      readOnly: true,
                      text: 'Client Name',
                      hintText: 'Enter client name',
                      validator: 'Please, Enter client name',
                      keyboardType: TextInputType.name,
                    ),
                         const SizedBox(height: 16),
                    CommonField(
                      controller: controller.clientNumberController,
                      readOnly: true,
                      text: 'Client Phone Number',
                      hintText: 'Enter client phone number',
                      validator: 'Please ,Enter client phone number',
                      keyboardType: const TextInputType.numberWithOptions(
                        decimal: true,
                      ),
                      inputFormatters: [
                        FilteringTextInputFormatter.digitsOnly,
                      ],
                    ),
                    const SizedBox(height: 16),
                    CommonDropDown(
                      context: context,
                      label: "Priority",
                      value: controller.selectPriority,
                      items: controller.priorityList,
                      onChanged: (value) {
                        if (value != null) {
                          controller.selectPriority.value = value;
                        }
                      },
                    ),
                    const SizedBox(width: 16),
                    SfDatePickerWidget(
                      selectedDate: controller.selectedFromDate,
                      title: 'Select Hearing Date',
                      maxDate: DateTime(2030),
                      onSelectionChanged: (args) {
                        if (args.value is DateTime) {
                          controller.selectedFromDate(args.value);
                          Navigator.pop(context);
                        }
                      },
                    ),
                    const SizedBox(height: 16),
                    CommonField(
                      controller: controller.commentController,
                      minLines: 5,
                      text: 'Your Note',
                      hintText: 'Write some notes',
                      keyboardType: TextInputType.text,
                    ),
                    const SizedBox(height: 16),
                    CustomTextWidget(text: "Assign your task to employee"),
                    const SizedBox(height: 16),
                    CommonDropDown(
                      context: context,
                      label: "Select Employee",
                      value: controller.selectEmployee,
                      items: controller.employeeList,
                      onChanged: (value) {
                        if (value != null) {
                          controller.selectEmployee.value = value;
                          controller.selectEmployeeList.add(value);
                        }
                      },
                    ),
                    Obx(() => controller.selectEmployeeList.isEmpty
                        ? SizedBox()
                        : SizedBox(
                            height: 100,
                            child: ListView.builder(
                              shrinkWrap: true,
                              primary: false,
                              itemCount: controller.selectEmployeeList.length,
                              itemBuilder: (BuildContext context, int index) {
                                final String option = controller.selectEmployeeList[index];

                                return ListTile(
                                  onTap: () {},
                                  title: Text(
                                    option,
                                  ),
                                );
                              },
                            ),
                          )),
                  ],
                ),
              ),
              confirmButtonFunction: () {
                Get.back();
              }),
        );
      },
    );
  }


}
